ext {
    imVersion = "2.+"
    bioVersion = "2.+"
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.6.2"
    }
}

subprojects {
    group = 'org.intermine'
    version = '2.0.0-RC-SNAPSHOT'

    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "com.jfrog.bintray"
    apply plugin: "com.jfrog.artifactory"

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile group: 'ant', name: 'ant', version: '1.6.5'
        compile group: "org.intermine", name: "intermine-webtasks", version: imVersion
        testCompile group: 'junit', name: 'junit', version: '4.8.2'
        testCompile group: 'xmlunit', name: 'xmlunit', version: '1.0'
    }

    test {
        ignoreFailures = true
    }

    artifactory {
        contextUrl = 'https://oss.jfrog.org/artifactory/'
        resolve {
            repository {
                repoKey = 'libs-release'
            }
        }
        publish {
            repository {
                if (project.version.endsWith("-SNAPSHOT")) {
                    repoKey = 'oss-snapshot-local'
                } else {
                    repoKey = 'oss-release-local'
                }
            username = System.getenv('BINTRAY_USER')
            password = System.getenv('BINTRAY_KEY')
            }
            defaults {
	        publishConfigs('archives')
            }
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        pkg {
            repo = 'bio'
            name = project.name
            userOrg = user
            licenses = ['LGPL-2.1']
            vcsUrl = 'https://github.com/intermine/intermine.git'
        }
        configurations = ['archives']
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

