buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath group: 'org.intermine', name: 'plugin', version: '1.+'
    }
}

ext {
    imVersion = "2.+"

    mineRelease = hasProperty('release') ? "." + release : ''
    mineName = "biotestmine"
    minePropertyFileName = "${mineName}.properties$mineRelease"
    minePropertyFile = "${System.env.HOME}/.intermine/$minePropertyFileName"
    if( !file(minePropertyFile).exists() ) {
        minePropertyFile = "$project.rootDir/dbmodel/resources/biotestmine.properties"
    }
    println "Using properties file: '$minePropertyFile'"
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile group: "org.intermine", name: "intermine-resources", version: imVersion
        compile group: 'ant', name: 'ant', version: '1.6.5'
        testCompile group: 'junit', name: 'junit', version: '4.8.2'
    }

    task copyMineProperties(type: Copy) {
        description "Copies mine specific intermine.properties file (from .intermine directory) into resources output to be included in the war"
        dependsOn 'processResources'

        def db_username = System.getenv('USER')
        def db_pw = System.getenv('USER')

        // use ENV VARs instead if they've set them. need for travis
        if (System.getenv('PSQL_USER')) {
            db_username = System.getenv('PSQL_USER')
        }
        if (System.getenv('PSQL_PWD')) {
            db_pw = System.getenv('PSQL_PWD')
        }

        from (minePropertyFile) {
            filter{String line -> line.replaceAll('PSQL_USER', db_username)}
            filter{String line -> line.replaceAll('PSQL_PWD', db_pw)}
        }
        into sourceSets.main.output.resourcesDir
        rename { fileName -> fileName.replace("$minePropertyFileName", "intermine.properties") }
        inputs.sourceFiles.stopExecutionIfEmpty()
    }

}
