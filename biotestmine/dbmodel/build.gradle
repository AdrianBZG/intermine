sourceSets {
    main {
        resources {
            srcDirs = ['resources']
        }
    }
}

def core.model.path = "bio/core
def extra.model.paths.start = biotestmine/dbmodel/build/model/so_additions.xml bio/core/genomic_additions.xml

configurations {
    compile
}

dependencies {
    compile group: "org.intermine", name: "intermine-objectstore", version: imVersion
    compile group: "org.intermine", name: "intermine-testresources", version: imVersion
    compile group: "org.intermine", name: "intermine-integrate", version: imVersion
    compile fileTree(dir: 'libs', include: '*.jar')
}


void mergeSourceModels() {
    ant.taskdef(name: 'mergeSourceModels', classname: 'org.intermine.task.MergeSourceModelsTask') {
        classpath {
          pathelement(path: configurations.testCompile.asPath)
        }
    }   
    ant.mergeSourceModels(projectXml: "${rootDir}/project.xml", basedir: "${rootDir}", modelFile: "", extraModelPathsStart: "" )
}

task mergeModels() {
    group "${taskGroup}"
    description "Merge defferent source model files into an intermine XML model"
    doLast {
        mergeSourceModels
   }
}
