apply plugin: "war"
apply from: "https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin"
apply plugin: "webapp"

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

configurations {
    bioWebApp
}

dependencies {
    compile project(":dbmodel")
    compile group: "org.intermine", name: "bio-model", version: imVersion
    compile group: "org.intermine", name: "intermine-webapp", version: imVersion, classifier: "classes"
    compile group: "org.intermine", name: "intermine-integrate", version: imVersion
    compile group: "org.intermine", name: "intermine-api", version: imVersion
    compile group: "org.intermine", name: "intermine-webtasks", version: imVersion
    compile group: "javax.servlet", name: "jstl", version: "1.2"
    compile group: "org.apache.struts", name: "struts-core", version: "1.3.10"
    bioWebApp group: "org.intermine", name: "bio-webapp", version: imVersion, ext: "war"
}

def explodedWebAppDir = "$buildDir/explodedWebApp"
def mergePropsDir = "$buildDir/props"

webappConfig {
    mineName = "biotestmine"
    objectStoreName = "os.production"
    userProfileObjectStoreName = "os.userprofile-production"
    userProfileObjectStoreWriterName = "osw.userprofile-production"
    defaultInterminePropertiesFile = "default.intermine.production.properties"
    propsDir = "$mergePropsDir"
}

war {
    dependsOn 'mergeProperties', 'summariseObjectStore'
    doLast {
        unwarBioWebApp.execute()
        warWebApp.execute()
    }
}

task warWebApp(type: War) {
    description "Create the war from the build/explodedWebAppDir directory"
    from "${explodedWebAppDir}"
    exclude "WEB-INF/web.properties"
    webInf { from "${mergePropsDir}" }
}

// read in biotestmine.properties to get the contextPath
def props = new Properties()
file(minePropertyFile).withInputStream { props.load(it) }

gretty {
    jvmArgs = ['-Dorg.apache.el.parser.SKIP_IDENTIFIER_CHECK=true']
    contextPath = props.getProperty("webapp.path")
}

