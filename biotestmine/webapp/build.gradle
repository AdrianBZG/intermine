apply plugin: "war"
apply from: "https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin"
sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

def explodedWebAppDir = "$buildDir/explodedWebApp"
def mergePropsDir = "$buildDir/props"

configurations {
  bioWebApp
  commonResources
}

dependencies { 
  compile project(":dbmodel")
  compile group: "org.intermine", name: "bio-testall", version: imVersion
  compile group: "org.intermine", name: "intermine-webapp", version: imVersion, classifier: "classes"
  compile group: "org.intermine", name: "intermine-integrate", version: imVersion
  compile group: "org.intermine", name: "intermine-api", version: imVersion
  compile group: "javax.servlet", name: "jstl", version: "1.2"
  compile group: "org.apache.struts", name: "struts-core", version: "1.3.10"
  commonResources group: "org.intermine", name: "intermine-resources", version: imVersion
  bioWebApp group: "org.intermine", name: "bio-webapp", version: imVersion, ext: "war"
}

apply plugin: 'webapp'

webappConfig {
  mineName = "biotestmine"
  objectStoreName = "os.production"
}

processResources {
  //dependsOn "copyDefaultProperties", "copyMineProperties"
}

war {
  exclude "WEB-INF/web.properties"
  webInf { from "${mergePropsDir}" }

  doFirst {
    tasks.mergeProperties.execute();
    tasks.summariseObjectStore.execute()
  }

  doLast {
    unwarBioWebApp.execute()
    warWebApp.execute()	
  }
}

task warWebApp(type: War) {
  group "${taskGroup}"
  description "Create the war from the build/explodedWebAppDir directory"
  from "${explodedWebAppDir}"
  //exclude "WEB-INF/web.properties"
  webInf { from "${mergePropsDir}" }
}

// read in testmodel.properties to get the contextPath
def props = new Properties()
file(minePropertyFile).withInputStream { props.load(it) }

gretty {
    jvmArgs = ['-Dorg.apache.el.parser.SKIP_IDENTIFIER_CHECK=true']
    contextPath = props.getProperty("webapp.path")
}

