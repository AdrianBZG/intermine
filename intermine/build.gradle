buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "net.researchgate:gradle-release:2.6.0"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0"
    }
}

subprojects {
    group = 'org.intermine'
    apply plugin: 'net.researchgate.release'
    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "com.jfrog.bintray"

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://clojars.org/repo' }
        flatDir {
            dirs '../libs'
        }
    }

    release {
        failOnCommitNeeded = true
        failOnPublishNeeded = true
        failOnSnapshotDependencies = true
        failOnUnversionedFiles = true
        failOnUpdateNeeded = true
        revertOnFail = true
        preCommitText = ''
        preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
        tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
        newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
        version = "2.0.0-RC-SNAPSHOT"
        tagTemplate = '${project.name}-${version}'
        versionPropertyFile = 'gradle.properties'
        versionProperties = []
        buildTasks = ['build']

        git {
            requireBranch = 'gradle'
            pushToRemote = 'origin'
            pushToBranchPrefix = ''
            commitVersionFileOnly = false
            signTag = false
        }
    }

    if (it.name != 'intermine-resources') {
        dependencies {
            compile group: 'ant', name: 'ant', version: '1.6.5'
            compile group: 'log4j', name: 'log4j', version: '1.2.17'
            compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.7'
            testCompile group: 'junit', name: 'junit', version: '4.8.2'
        }

        if (it.name != 'intermine-testresources') {
            dependencies {
                compile project(':intermine-resources')
            }
        }
    }

    tasks.withType(Test) {
        scanForTestClasses = false
        include '**/*Test.class'
        test.reports.html.enabled = true
    }

    test {
        ignoreFailures = true

        testLogging {
            events "skipped", "failed"
            exceptionFormat "full"
            showExceptions true
            showStackTraces true
            showCauses true
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        pkg {
            repo = 'intermine'
            name = project.name
            userOrg = user
            licenses = ['LGPL-2.1']
            vcsUrl = 'https://github.com/intermine/intermine.git'
        }
        configurations = ['archives']
    }

}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

