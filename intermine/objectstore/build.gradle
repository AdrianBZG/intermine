apply plugin: "antlr" 

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated-src/antlr/main']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
        antlr {
            srcDirs = ['src/main/antlr']
        }
    }

    test {
        java {
            srcDirs = ['src/test/java', 'build/gen/src']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

dependencies {
    compile project(':intermine-model')
    compile group: 'ant', name: 'ant', version: '1.6.5'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212'
    compile group: 'torque', name: 'torque-gen', version: '3.2'
    compile group: 'commons-io', name: 'commons-io', version: '1.2'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.6.1'
    compile group: 'com.zaxxer', name: 'HikariCP-java6', version: '2.3.8'
    compile group: 'net.iharder', name: 'base64', version: '2.3.8' //not clear wich version is currently used
    compile group: 'au.com.bytecode', name: 'opencsv', version: '2.4' //version 2.3 not available in maven
    compile group: 'org.ow2.asm', name: 'asm', version: '4.2'
    compile group: 'mockobjects', name: 'mockobjects-core', version: '0.09'
    compile group: 'mockobjects', name: 'mockobjects-jdk1.3', version: '0.09'
    compile fileTree(dir: "$projectDir/lib", include: '*.jar') //org.gnu.readline is not in a public repo
}

task copyDefaultProperties(type: Copy) {
    from '../default.intermine.properties'
    into sourceSets.test.output.resourcesDir
    inputs.sourceFiles.stopExecutionIfEmpty()
}

task copyTestProperties(type: Copy) {
    from "${System.env.HOME}/.intermine/intermine-test.properties"
    into sourceSets.test.output.resourcesDir

    rename { fileName -> fileName.replace('intermine-test.properties', 'intermine.properties') }

    inputs.sourceFiles.stopExecutionIfEmpty()
}

void generateModel(model, destination, type) {
    ant.taskdef(name: 'modelOutputTask', classname: 'org.intermine.task.ModelOutputTask') {
      classpath { fileset(dir: './build/libs/', includes: '*.jar') }
    }
    ant.modelOutputTask(model: "$model", destDir: "$destination", type: "$type")
}

void buildDB(String osname, String model) {
    ant.taskdef(name: 'buildDBUnittest', classname: 'org.intermine.task.BuildDbTask')
    ant.buildDBUnittest(osname: "$osname", model: "$model", schemafile:"${osname}-schema.xml", tempDir: 'build/tmp')
}

task generateTestModel {
    doLast {
        generateModel('testmodel', 'build/gen/src', 'java')
    }
}

tasks.withType(Test) {
    scanForTestClasses = false
    include '**/*Test.class'
}

tasks.compileTestJava.dependsOn 'generateTestModel', 'copyDefaultProperties', 'copyTestProperties'
tasks.compileTestJava.mustRunAfter 'generateTestModel'
