sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

ext {
    // suffix for property file. might be blank
    mineRelease = hasProperty('release') ? "." + release : ''
    // filename for property file
    minePropertyFileName = "testmodel.properties$mineRelease"
    // full path to file
    minePropertyFile = "${System.env.HOME}/.intermine/$minePropertyFileName"
    // NO PROPERTY FILE -- use the default
    if( !file(minePropertyFile).exists() ) {
        minePropertyFile = "$project.rootDir/resources/src/main/resources/testmodel.properties"
    }
}

void updateTestmodelPropertyFile() {

    def db_username = System.getenv('USER')
    def db_pw = System.getenv('USER')

    // use ENV VARs instead if they've set them. need for travis
    if (System.getenv('PSQL_USER')) {
        db_username = System.getenv('PSQL_USER')
    }
    if (System.getenv('PSQL_PWD')) {
        db_pw = System.getenv('PSQL_PWD')
    }

    String contents = new File("$ext.minePropertyFile").getText( 'UTF-8' )
    contents = contents.replaceAll( 'PSQL_USER', "${db_username}")
    contents = contents.replaceAll( 'PSQL_PWD', "${db_pw}")
    new File("$minePropertyFile").write( contents, 'UTF-8' )
}

task updateTestmodelProps {
    description "update testmodel.properties with the correct credentials"
    updateTestmodelPropertyFile()
}

tasks.processResources.dependsOn('updateTestmodelProps')
