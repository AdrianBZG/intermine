// Prevent the build target from building an empty compile jar
// we only have testCompile classes and we want them to be in the jar instead via the buildTestModelJar target
jar.enabled = false

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

dependencies {
    testCompile project(':intermine-objectstore')
    testCompile 'commons-lang:commons-lang:2.6'
}

configurations {
    testArtifacts
}

void generateModel(model, destination, type) {
    ant.taskdef(name: 'modelOutputTask', classname: 'org.intermine.task.ModelOutputTask') {
        classpath {
            fileset(dir: '../model/build/libs/', includes: '*.jar')
            dirset(dir: 'src/test/resources/')
            pathelement(path: configurations.testCompile.asPath)
        }
    }   

    ant.modelOutputTask(model: model, destDir: destination, type: type)
}


class CreateInterMinePropertiesTask extends DefaultTask {
    @OutputDirectory File outputDir = new File(project.buildDir, "resources")

    @InputFile File inputFile = new File("$project.rootDir/testresources/src/test/resources/intermine-test.properties")

    @TaskAction
    public void generate() {
        File outputFile = new File(outputDir, "intermine.properties")

        String contents = inputFile.getText('UTF-8')

        // use ENV VARs for default username and password for postgres
        contents = contents.replaceAll( 'PSQL_USER', System.getenv('USER'))
        contents = contents.replaceAll( 'PSQL_PWD', System.getenv('USER'))

        outputFile.text = contents
    }
}

task createInterMineProperties(type: CreateInterMinePropertiesTask) {
    description "Creates properties file to use for unit tests"
}
task generateTestModel {
    doLast {
        generateModel('testmodel', 'src/test/java', 'java')
    }   
}

task buildTestModelJar(type: Jar) {
    from(sourceSets.test.output)
}

tasks.compileTestJava.dependsOn 'generateTestModel'
tasks.buildTestModelJar.dependsOn 'createInterMineProperties', 'testClasses'

artifacts {
    testArtifacts buildTestModelJar
}
